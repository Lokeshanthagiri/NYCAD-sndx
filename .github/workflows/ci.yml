name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-and-quality:
    runs-on: ubuntu-latest
    steps:
      # Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # --------------------------------------
      # Backend Docker Build + Trivy Scan
      # --------------------------------------
      - name: Build backend image
        run: docker build -t nycad-backend ./backend

      - name: Scan backend with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nycad-backend:latest
          format: table
          exit-code: 0
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          output: trivy-backend.txt

      # --------------------------------------
      # Frontend Docker Build + Trivy Scan
      # --------------------------------------
      - name: Build frontend image
        run: docker build -t nycad-frontend ./frontend

      - name: Scan frontend with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nycad-frontend:latest
          format: table
          exit-code: 0
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          output: trivy-frontend.txt

      # --------------------------------------
      # Node.js Dependency Audit (Backend & Frontend)
      # --------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run npm audit (backend)
        working-directory: ./backend
        run: npm audit --audit-level=high || true

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run npm audit (frontend)
        working-directory: ./frontend
        run: npm audit --audit-level=high || true

      # --------------------------------------
      # SonarQube Code Quality Scan
      # --------------------------------------
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip \
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=nycad-sndx \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # --------------------------------------
      # Upload Reports as Artifacts
      # --------------------------------------
      - name: Upload Trivy backend report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-backend-report
          path: trivy-backend.txt

      - name: Upload Trivy frontend report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-frontend-report
          path: trivy-frontend.txt
